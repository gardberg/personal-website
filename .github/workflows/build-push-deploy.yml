name: Docker Build, Push, and Deploy

on:
  push:
    branches:
      - main

env:
  REGISTRY: europe-north1-docker.pkg.dev
  IMAGE_NAME: ${{ github.repository }}
  ARTIFACT_NAME: personal-repo
  CLUSTER_NAME: personal-cluster
  CLUSTER_LOCATION: europe-north1

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          
      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          
      - name: Configure Docker to use the Google Container Registry
        run: |
          gcloud auth configure-docker ${{ env.REGISTRY }}
          
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ secrets.GCP_PROJECT_ID }}/${{ env.ARTIFACT_NAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
            ${{ env.REGISTRY }}/${{ secrets.GCP_PROJECT_ID }}/${{ env.ARTIFACT_NAME }}/${{ env.IMAGE_NAME }}:latest

  deploy-to-gke:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Get GKE credentials
        uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: ${{ env.CLUSTER_NAME }}
          location: ${{ env.CLUSTER_LOCATION }}

      - name: Replace GCP_PROJECT_ID in deployment.yaml
        run: |
          envsubst < k8s/deployment.yaml > k8s/deployment.yaml

      - name: Deploy to GKE
        run: |
          kubectl apply -f k8s/

      - name: Wait for deployment to complete
        run: |
          kubectl rollout status deployment/$(kubectl get deployments -o jsonpath="{.items[0].metadata.name}")
